{"version":3,"file":"static/js/106.05707d39.chunk.js","mappings":"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","sources":["components/MovieDetails.jsx","services/themoviedbapi.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useLocation, useNavigate } from 'react-router-dom';\nimport { fetchMovieDetails, fetchMovieCredits, fetchMovieReviews } from '../services/themoviedbapi';\n\nconst MOVIE_IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\nconst POSTER_SIZE = 'w500';\nconst PROFILE_SIZE = 'w200';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [movie, setMovie] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n\n  const showCast = location.pathname.includes('cast');\n  const showReviews = location.pathname.includes('reviews');\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      const movieData = await fetchMovieDetails(movieId);\n      const creditsData = await fetchMovieCredits(movieId);\n      const reviewsData = await fetchMovieReviews(movieId);\n\n      setMovie(movieData);\n      setCast(creditsData.cast);\n      setReviews(reviewsData.results);\n    };\n    fetchDetails();\n  }, [movieId]);\n\n  if (!movie) return <div>Loading...</div>;\n\n  const handleViewCast = () => navigate(`/movies/${movieId}/cast`);\n  const handleViewReviews = () => navigate(`/movies/${movieId}/reviews`);\n  const handleHideDetails = () => navigate(`/movies/${movieId}`);\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <div className=\"mb-4\">\n        <Link to=\"/\" className=\"inline-block text-blue-500 bg-white border border-blue-500 rounded-lg px-4 py-2 text-lg font-semibold hover:bg-blue-500 hover:text-white transition-colors\">\n          Back to Home\n        </Link>\n      </div>\n      <div className=\"flex flex-col lg:flex-row\">\n        <div className=\"w-full lg:w-1/3 mb-4 lg:mb-0 lg:mr-4 relative\">\n          <img\n            src={movie.poster_path ? `${MOVIE_IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : 'https://via.placeholder.com/500x750?text=No+Image'}\n            alt={movie.title}\n            className=\"w-full h-auto object-cover rounded\"\n            loading=\"lazy\"\n            style={{ aspectRatio: '2/3' }}\n          />\n        </div>\n        <div className=\"lg:w-2/3\">\n          <h1 className=\"text-3xl font-bold mb-2\">{movie.title}</h1>\n          <p className=\"mb-4\">{movie.overview}</p>\n          <div className=\"flex space-x-4 mb-4\">\n            {!showCast && !showReviews && (\n              <>\n                <button\n                  onClick={handleViewCast}\n                  className=\"bg-blue-500 text-white p-2 rounded\"\n                >\n                  View Cast\n                </button>\n                <button\n                  onClick={handleViewReviews}\n                  className=\"bg-blue-500 text-white p-2 rounded\"\n                >\n                  View Reviews\n                </button>\n              </>\n            )}\n            {(showCast || showReviews) && (\n              <button\n                onClick={handleHideDetails}\n                className=\"bg-blue-500 text-white p-2 rounded\"\n              >\n                Hide Details\n              </button>\n            )}\n          </div>\n          {showCast && (\n            <div>\n              <h2 className=\"text-2xl font-bold mb-2\">Cast</h2>\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-4\">\n                {cast.map((member) => (\n                  <div\n                    key={member.cast_id}\n                    className=\"bg-white p-4 rounded shadow flex flex-col items-center\"\n                    style={{ height: '400px' }}\n                  >\n                    <div className=\"relative w-40 h-60\">\n                      <img\n                        src={member.profile_path ? `${MOVIE_IMAGE_BASE_URL}${PROFILE_SIZE}${member.profile_path}` : 'https://via.placeholder.com/200x300?text=No+Image'}\n                        alt={member.name}\n                        className=\"w-full h-full object-cover rounded\"\n                        loading=\"lazy\"\n                        style={{ aspectRatio: '2/3' }}\n                      />\n                    </div>\n                    <h3 className=\"text-lg font-semibold\">{member.name}</h3>\n                    <p className=\"text-sm text-gray-600\">as {member.character}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          {showReviews && (\n            <div>\n              <h2 className=\"text-2xl font-bold mb-2\">Reviews</h2>\n              <div>\n                {reviews.length > 0 ? (\n                  reviews.map((review) => (\n                    <div key={review.id} className=\"bg-white p-4 rounded shadow mb-4\">\n                      <h3 className=\"text-lg font-semibold\">{review.author}</h3>\n                      <p className=\"text-sm text-gray-600\">{review.content}</p>\n                    </div>\n                  ))\n                ) : (\n                  <p>No reviews available.</p>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","const API_KEY = '45c6f069867dd5e18f5fb19180b28c01';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n  return response.json();\n};\n\nexport const searchMovies = async (query) => {\n  const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`);\n  return response.json();\n};\n\nexport const fetchMovieDetails = async (movieId) => {\n  const response = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n  return response.json();\n};\n\nexport const fetchMovieCredits = async (movieId) => {\n  const response = await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.json();\n};\n\nexport const fetchMovieReviews = async (movieId) => {\n  const response = await fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.json();\n};"],"names":["MOVIE_IMAGE_BASE_URL","MovieDetails","movieId","useParams","location","useLocation","navigate","useNavigate","movie","setMovie","useState","cast","setCast","reviews","setReviews","showCast","pathname","includes","showReviews","useEffect","async","movieData","fetchMovieDetails","creditsData","fetchMovieCredits","reviewsData","fetchMovieReviews","results","fetchDetails","_jsx","children","_jsxs","className","Link","to","src","poster_path","alt","title","loading","style","aspectRatio","overview","_Fragment","onClick","handleViewCast","handleViewReviews","handleHideDetails","map","member","height","profile_path","name","character","cast_id","length","review","author","content","id","API_KEY","BASE_URL","fetchTrendingMovies","fetch","json","searchMovies","query"],"sourceRoot":""}